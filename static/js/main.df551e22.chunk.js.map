{"version":3,"sources":["windows.png","icon1.png","icon2.png","icon3.png","icon4.png","icon6.png","icon5.png","UserInput.js","Clock.js","UserOutput.js","Error.js","Wiki.js","StartButton.js","StartMenu.js","DesktopIcons.js","Sounds.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","UserInput","react_default","a","createElement","type","onChange","this","props","value","firstLetter","maxLength","placeholder","Component","Clock","state","time","Date","_this2","timerID","setInterval","tick","clearInterval","setState","className","toLocaleTimeString","UserOutput","_this","react","globalError","wholeWordResult","map","item","index","key","tabIndex","onClick","handleClick","Error","returnError","class","id","closePopup","Wiki","_this$props","selectedItem","clicked","closeWiki","href","concat","target","rel","StartButton","onMouseDown","handleMouseDown","src","windows","alt","StartMenu","visibility","menuVisibility","DesktopIcons","aria-label","icon1","aria-hidden","icon2","icon3","icon4","icon6","Sounds","console","log","playAudio","title","width","height","frameborder","allowfullscreen","minimizeIcon","index_es","icon","faWindowMinimize","closeWindowIcon","faWindowClose","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","e","innerText","handleTextChange","userInput","regexMaster","RegExp","wordSpread","toConsumableArray","error","letter","test","length","axiosCall","playSound","wholeWord","modifiedList","axios","url","method","then","response","data","word","push","isLoading","filteredArray","visible","toggleMenu","stopPropagation","src_DesktopIcons","src_UserInput","src_UserOutput","bind","src_Error","src_Wiki","src_Sounds","src_StartButton","src_StartMenu","src_Clock","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oICAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mLCwBzBC,0LAnBP,OACIC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,SACAC,KAAK,OACLC,SAAUC,KAAKC,MAAMF,SACrBG,MAASF,KAAKC,MAAME,YAEpBC,UAAY,KAEZC,YAAY,oCAbRC,cC6BTC,6MA3BVC,MAAQ,CACJC,KAAM,IAAIC,yFAGM,IAAAC,EAAAX,KAChBA,KAAKY,QAAUC,YAAY,kBAAMF,EAAKG,QAAQ,oDAI9CC,cAAcf,KAAKY,wCAInBZ,KAAKgB,SAAS,CACVP,KAAM,IAAIC,wCAKnB,OACEf,EAAAC,EAAAC,cAAA,OAAKoB,UAAU,SACZtB,EAAAC,EAAAC,cAAA,SAAIG,KAAKQ,MAAMC,KAAKS,8BAtBTZ,4BC+BLa,mLA1BF,IAAAC,EAAApB,KACL,OACIL,EAAAC,EAAAC,cAACwB,EAAA,SAAD,KACKrB,KAAKC,MAAMqB,YAEZ3B,EAAAC,EAAAC,cAAA,KAAGoB,UAAU,kBAAb,mCAGIjB,KAAKC,MAAMsB,gBAAgBC,IAAI,SAACC,EAAMC,GAClC,OACI/B,EAAAC,EAAAC,cAAA,UACI8B,IAAKD,EACLT,UAAU,mBACVW,SAAS,IACTC,QAAST,EAAKnB,MAAM6B,aAEnBL,aArBRnB,aCyBVyB,mLAtBP,OACIpC,EAAAC,EAAAC,cAACwB,EAAA,SAAD,KAEKrB,KAAKC,MAAM+B,YACPrC,EAAAC,EAAAC,cAAA,OAAKoC,MAAM,aAAaC,GAAG,SACxBvC,EAAAC,EAAAC,cAAA,OAAKoC,MAAM,aACPtC,EAAAC,EAAAC,cAAA,KAAGoC,MAAM,SAAT,SACAtC,EAAAC,EAAAC,cAAA,UACIoC,MAAM,IACNJ,QAAS7B,KAAKC,MAAMkC,YAFxB,MAIJxC,EAAAC,EAAAC,cAAA,KAAGoC,MAAM,gBAAT,8CAEN,aAjBE3B,aCiCL8B,mLA9BF,IAAAC,EAEsCrC,KAAKC,MAAzCqC,EAFFD,EAEEC,aAAcC,EAFhBF,EAEgBE,QAASC,EAFzBH,EAEyBG,UAC9B,OACI7C,EAAAC,EAAAC,cAACwB,EAAA,SAAD,KACKkB,EACG5C,EAAAC,EAAAC,cAAA,OAAKoB,UAAU,YAAYiB,GAAG,QAC1BvC,EAAAC,EAAAC,cAAA,OAAKoB,UAAU,YACXtB,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,UACIoB,UAAU,IACVY,QAASW,GAFb,MAMJ7C,EAAAC,EAAAC,cAAA,KAAGoB,UAAU,eAAb,oBACqBtB,EAAAC,EAAAC,cAAA,KAAG4C,KAAI,iCAAAC,OAAmCJ,GACvDK,OAAO,SACP1B,UAAU,WACV2B,IAAI,uBAAuBN,KAItC,aAzBFhC,8BCaJuC,mLAXP,OACIlD,EAAAC,EAAAC,cAAA,UAAQoB,UAAU,cAAc6B,YAAa9C,KAAKC,MAAM8C,iBACpDpD,EAAAC,EAAAC,cAAA,OAAKoB,UAAU,QACXtB,EAAAC,EAAAC,cAAA,OAAKoB,UAAU,UAAU+B,IAAKC,IAASC,IAAI,wBAE/CvD,EAAAC,EAAAC,cAAA,KAAGoB,UAAU,SAAb,iBAPUX,aCuBX6C,mLArBP,IAAIC,EAAa,iBAMjB,OAJIpD,KAAKC,MAAMoD,iBACXD,EAAa,kBAIbzD,EAAAC,EAAAC,cAAA,OAAKoB,UAAWmC,GACZzD,EAAAC,EAAAC,cAAA,OAAKoB,UAAU,eACftB,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAG4C,KAAK,qCAAR,gBACJ9C,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAG4C,KAAK,kCAAR,mBACJ9C,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAG4C,KAAK,sCAAR,iBACJ9C,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAG4C,KAAK,qCAAR,mBACJ9C,EAAAC,EAAAC,cAAA,MAAIoB,UAAU,YAAWtB,EAAAC,EAAAC,cAAA,KAAG4C,KAAK,iCAAR,0CAjBrBnC,0GCoCTgD,mLA5BP,OACI3D,EAAAC,EAAAC,cAAA,OAAKoB,UAAU,gBACXtB,EAAAC,EAAAC,cAAA,OAAKoB,UAAU,kBACXtB,EAAAC,EAAAC,cAAA,UAAQ0D,aAAW,iBAAiBtC,UAAU,gBAAetB,EAAAC,EAAAC,cAAA,OAAKmD,IAAKQ,IAAOC,cAAY,UAC1F9D,EAAAC,EAAAC,cAAA,KAAGoB,UAAU,YAAb,8BAEJtB,EAAAC,EAAAC,cAAA,OAAKoB,UAAU,kBACXtB,EAAAC,EAAAC,cAAA,OAAKmD,IAAKU,IAAOzC,UAAU,QAAQwC,cAAY,SAC/C9D,EAAAC,EAAAC,cAAA,KAAGoB,UAAU,YAAb,mBAEJtB,EAAAC,EAAAC,cAAA,OAAKoB,UAAU,kBACXtB,EAAAC,EAAAC,cAAA,OAAKmD,IAAKW,IAAO1C,UAAU,QAAQwC,cAAY,SAC/C9D,EAAAC,EAAAC,cAAA,KAAGoB,UAAU,YAAb,iBAEJtB,EAAAC,EAAAC,cAAA,OAAKoB,UAAU,kBACXtB,EAAAC,EAAAC,cAAA,OAAKmD,IAAKY,IAAO3C,UAAU,QAAQwC,cAAY,SAC/C9D,EAAAC,EAAAC,cAAA,KAAGoB,UAAU,YAAb,cAEJtB,EAAAC,EAAAC,cAAA,OAAKoB,UAAU,kBACXtB,EAAAC,EAAAC,cAAA,OAAKmD,IAAKa,IAAO5C,UAAU,QAAQwC,cAAY,SAC/C9D,EAAAC,EAAAC,cAAA,KAAGoB,UAAU,YAAb,yBAtBOX,aCgBZwD,mLAlBP,OADAC,QAAQC,IAAIhE,KAAKC,MAAMgE,WAEnBtE,EAAAC,EAAAC,cAACwB,EAAA,SAAD,KACKrB,KAAKC,MAAMgE,UAERtE,EAAAC,EAAAC,cAAA,UAAQqE,MAAM,QACdC,MAAM,IACNC,OAAO,IACPpB,IAAI,mFAA2FqB,YAAY,IAC3GC,iBAAe,IAGfP,QAAQC,IAAI,mBAdX1D,aCcfiE,EAAe5E,EAAAC,EAAAC,cAAC2E,EAAA,EAAD,CAAiBf,cAAY,OAAOgB,KAAMC,MACzDC,EAAkBhF,EAAAC,EAAAC,cAAC2E,EAAA,EAAD,CAAiBf,cAAY,OAAOgB,KAAMG,MAuLnDC,cAnLb,SAAAA,IAAc,IAAAzD,EAAA,OAAA0D,OAAAC,EAAA,EAAAD,CAAA9E,KAAA6E,IACZzD,EAAA0D,OAAAE,EAAA,EAAAF,CAAA9E,KAAA8E,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAAlF,QAeFmC,WAAa,WACXf,EAAKJ,SAAS,CACZgB,aAAa,KAlBHZ,EAsBdU,YAAc,SAACqD,GACb/D,EAAKJ,SAAS,CACZsB,aAAc6C,EAAExC,OAAOyC,UACvB7C,SAAS,KAzBCnB,EA6BdoB,UAAY,WACVpB,EAAKJ,SAAS,CACZuB,SAAS,KA/BCnB,EAoCdiE,iBAAmB,SAACF,GAClB,IAAMG,EAAYH,EAAExC,OAAOzC,MACrBqF,EAAcC,OAAM,kBACpBC,EAAUX,OAAAY,EAAA,EAAAZ,CAAOQ,GACnBK,GAAQ,EAGZF,EAAWjE,IAAI,SAACoE,GAKd,OAHKL,EAAYM,KAAKD,KACpBD,GAAQ,GAGRA,IAGAF,EAAWK,OAAS,IAAe,IAAVH,GAC3BvE,EAAK2E,UAAUT,GACflE,EAAKJ,SAAS,CACZM,aAAa,KAIfF,EAAKJ,SAAS,CACZM,aAAa,KA5DLF,EA4Ed4E,UAAU,WACRjC,QAAQC,IAAI,WACZ5C,EAAKJ,SAAS,CACZiD,WAAU,GACV,eAhFU7C,EAwFd2E,UAAY,SAAUE,GAAW,IAAAtF,EAAAX,KAEzBkG,EAAe,GACjBlE,GAAc,EAClBmE,IAAM,CAEJC,IAAG,kDAAA1D,OAAoDuD,GACvDI,OAAQ,QAEPC,KAAK,SAACC,GAEPA,EAASC,KAAKhF,IAAI,SAACiF,GACjB,OACEP,EAAaQ,KAAKD,EAAKA,QAI3B9F,EAAKK,SAAS,CACZO,gBAAiB2E,GAChB,WAEGlE,EADwC,IAAtCrB,EAAKH,MAAMe,gBAAgBuE,SAMnCnF,EAAKK,SAAS,CACZgB,YAAaA,OAjHjBZ,EAAKZ,MAAQ,CACXmG,WAAW,EACXrF,aAAa,EACbU,aAAa,EACbT,gBAAiB,GACjB0E,UAAW,GACXW,cAAe,GACfC,SAAS,EACTvE,aAAc,GACdC,SAAS,EACT0B,WAAU,GAZA7C,+EAiEE+D,GACdnF,KAAK8G,aACL3B,EAAE4B,uDAIF/G,KAAKgB,SAAS,CACZ6F,SAAU7G,KAAKQ,MAAMqG,2CAmDvB,OACElH,EAAAC,EAAAC,cAAA,OAAKoB,UAAU,OACbtB,EAAAC,EAAAC,cAAA,OAAKoB,UAAU,iBAIftB,EAAAC,EAAAC,cAAA,OAAKoB,UAAU,aACbtB,EAAAC,EAAAC,cAACmH,EAAD,MACArH,EAAAC,EAAAC,cAAA,OAAKoB,UAAU,WACbtB,EAAAC,EAAAC,cAAA,OAAKoB,UAAU,UACbtB,EAAAC,EAAAC,cAAA,OAAKoB,UAAU,iBACbtB,EAAAC,EAAAC,cAAA,KAAGoC,MAAM,QAAQsC,GACjB5E,EAAAC,EAAAC,cAAA,UAAQgC,QAAS7B,KAAKgG,UAAW/E,UAAU,aAAatB,EAAAC,EAAAC,cAAA,KAAGoC,MAAM,QAAQ0C,MAG7EhF,EAAAC,EAAAC,cAAA,OAAKoB,UAAU,gBACbtB,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,OAAKoB,UAAU,mBACbtB,EAAAC,EAAAC,cAAA,OAAKoB,UAAU,aACbtB,EAAAC,EAAAC,cAACoH,EAAD,CACE/E,GAAG,YACHnC,SAAUC,KAAKqF,iBACfmB,KAAMxG,KAAKQ,MAAMgG,QAErB7G,EAAAC,EAAAC,cAAA,OAAKoB,UAAU,cACbtB,EAAAC,EAAAC,cAACqH,EAAD,CACE3F,gBAAiBvB,KAAKQ,MAAMe,gBAC5BD,YAAatB,KAAKQ,MAAMc,YACxBQ,YAAa9B,KAAK8B,YAAYqF,KAAKnH,SAEvCL,EAAAC,EAAAC,cAACuH,EAAD,CACEpF,YAAahC,KAAKQ,MAAMwB,YACxBG,WAAYnC,KAAKmC,aACnBxC,EAAAC,EAAAC,cAACwH,EAAD,CACE9E,QAASvC,KAAKQ,MAAM+B,QACpBD,aAActC,KAAKQ,MAAM8B,aACzBE,UAAWxC,KAAKwC,YAChB7C,EAAAC,EAAAC,cAACyH,EAAD,CACAtB,UAAWhG,KAAKQ,MAAMwF,UACtB/B,UAAWjE,KAAKQ,MAAMyD,gBAM9BtE,EAAAC,EAAAC,cAAA,cACAF,EAAAC,EAAAC,cAAC0H,EAAD,CAAaxE,gBAAiB/C,KAAK+C,gBAAgBoE,KAAKnH,QACtDL,EAAAC,EAAAC,cAAC2H,EAAD,CAAWnE,eAAgBrD,KAAKQ,MAAMqG,UACtClH,EAAAC,EAAAC,cAAC4H,EAAD,CAAOxG,UAAU,mBA5KXX,aCTEoH,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOrI,EAAAC,EAAAC,cAACoI,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMhC,KAAK,SAAAiC,GACjCA,EAAaC","file":"static/js/main.df551e22.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/windows.23d5e9bf.png\";","module.exports = __webpack_public_path__ + \"static/media/icon1.bac2d561.png\";","module.exports = __webpack_public_path__ + \"static/media/icon2.14134a94.png\";","module.exports = __webpack_public_path__ + \"static/media/icon3.dffa7899.png\";","module.exports = __webpack_public_path__ + \"static/media/icon4.7fbdffbe.png\";","module.exports = __webpack_public_path__ + \"static/media/icon6.d2919305.png\";","module.exports = __webpack_public_path__ + \"static/media/icon5.53c95952.png\";","import React, { Component } from 'react';\r\n\r\nclass UserInput extends Component {\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <form>\r\n                    <input \r\n                    type=\"text\"\r\n                    onChange={this.props.onChange}\r\n                    value = {this.props.firstLetter}\r\n\r\n                    maxLength = \"20\"\r\n\r\n                    placeholder=\"start typing something\"\r\n\r\n                    />\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserInput;","import React, { Component } from 'react';\r\n\r\n\r\nclass Clock extends Component {\r\n     state = {\r\n         time: new Date()\r\n     };\r\n\r\n     componentDidMount() {\r\n         this.timerID = setInterval(() => this.tick(), 1000);\r\n     }\r\n\r\n     componentWillUnmount() {\r\n         clearInterval(this.timerID);\r\n     }\r\n\r\n     tick() {\r\n         this.setState({\r\n             time: new Date()\r\n         });\r\n     }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"clock\">\r\n         <p>{this.state.time.toLocaleTimeString()}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Clock;","import React, { Component, Fragment } from 'react';\r\n\r\n\r\nclass UserOutput extends Component {\r\n\r\n\r\n    // copiedItem = this.props.selectedItem;\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                {this.props.globalError ? (\r\n                \r\n                <p className=\"letterOrNumber\">Please enter a letter or number</p> \r\n                \r\n                ):(\r\n                    this.props.wholeWordResult.map((item, index) => {\r\n                        return (\r\n                            <button\r\n                                key={index}\r\n                                className=\"autocompleteItem\"\r\n                                tabIndex=\"0\"\r\n                                onClick={this.props.handleClick}\r\n                            >\r\n                                {item}\r\n                            </button>\r\n                        )\r\n                    }))\r\n                }\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserOutput;\r\n\r\n","import React, { Component, Fragment } from 'react';\r\n\r\nclass Error extends Component {\r\n\r\n    render(){\r\n\r\n        return (\r\n            <Fragment>\r\n        \r\n                {this.props.returnError ? \r\n                    (<div class=\"errorPopup\" id=\"error\">\r\n                        <div class=\"topBanner\">\r\n                            <p class=\"error\">ERROR</p>\r\n                            <button\r\n                                class=\"x\"\r\n                                onClick={this.props.closePopup}>X</button>\r\n                        </div>\r\n                        <p class=\"errorMessage\">The word you have entered has no results.</p>\r\n                    </div>) \r\n                : null}\r\n            </Fragment>\r\n\r\n        )\r\n    }\r\n    \r\n}\r\n\r\n\r\nexport default Error","import React, { Component, Fragment } from 'react';\r\n\r\n\r\nclass Wiki extends Component {\r\n\r\n    render() {\r\n        //deconstructing the props so that we don't need to write this.props.blabla every time\r\n        const {selectedItem, clicked, closeWiki} = this.props;\r\n        return (\r\n            <Fragment>\r\n                {clicked ? (\r\n                    <div className=\"wikiPopup\" id=\"wiki\">\r\n                        <div className=\"popupBar\">\r\n                            <p>TAKE ME TO WIKI</p>\r\n                            <button\r\n                                className=\"x\"\r\n                                onClick={closeWiki}>X\r\n                                \r\n                            </button>\r\n                        </div>\r\n                        <p className=\"wikiMessage\">\r\n                            Learn more about <a href={`https://en.wikipedia.org/wiki/${selectedItem}`}\r\n                                target=\"_blank\"\r\n                                className=\"wikiLink\"\r\n                                rel=\"noopener noreferrer\">{selectedItem}</a>\r\n                        </p>\r\n                        \r\n                    </div>\r\n                ) : (null)}\r\n\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Wiki","import React, {Component} from 'react';\r\nimport windows from './windows.png'\r\n\r\nclass StartButton extends Component {\r\n    render(){\r\n        return(\r\n            <button className=\"startButton\" onMouseDown={this.props.handleMouseDown}>\r\n                <div className=\"logo\">\r\n                    <img className=\"windows\" src={windows} alt=\"retro windows logo\" />\r\n                </div>\r\n                <p className=\"start\">Start</p>\r\n            </button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StartButton","import React, { Component } from 'react';\r\n\r\nclass StartMenu extends Component {\r\n    render() {\r\n\r\n        let visibility = \"startMenu hide\";\r\n\r\n        if (this.props.menuVisibility) {\r\n            visibility = \"startMenu show\";\r\n        }\r\n\r\n        return (\r\n            <div className={visibility}>\r\n                <div className=\"sideBanner\"></div>\r\n                <ul>\r\n                    <li><a href=\"https://twitter.com/RobertJinChun\">Robert Chun</a></li>\r\n                    <li><a href=\"https://twitter.com/Lobst3rDev\">Geoff Grossman</a></li>\r\n                    <li><a href=\"https://twitter.com/LC_butWithCode\">Laura Chuang</a></li>\r\n                    <li><a href=\"https://twitter.com/beckyiscoding\">Becky Robinson</a></li>\r\n                    <li className=\"datamuse\"><a href=\"https://www.datamuse.com/api/\">Made using the Datamuse API.</a></li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StartMenu","import React, { Component } from 'react';\r\nimport icon1 from './icon1.png'\r\nimport icon2 from './icon2.png'\r\nimport icon3 from './icon3.png'\r\nimport icon4 from './icon4.png'\r\nimport icon5 from './icon5.png'\r\nimport icon6 from './icon6.png'\r\n\r\nclass DesktopIcons extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"desktopIcons\">\r\n                <div className=\"iconContainer1\">\r\n                    <button aria-label=\"about this app\" className=\"instructions\"><img src={icon1} aria-hidden=\"true\"/></button>\r\n                    <p className=\"iconText\">Autocomplete Instructions</p>\r\n                </div>\r\n                <div className=\"iconContainer2\">\r\n                    <img src={icon2} className=\"icon2\" aria-hidden=\"true\" />\r\n                    <p className=\"iconText\">Don't click me</p>\r\n                </div>\r\n                <div className=\"iconContainer3\">\r\n                    <img src={icon3} className=\"icon3\" aria-hidden=\"true\" />\r\n                    <p className=\"iconText\">I do nothing</p>\r\n                </div>\r\n                <div className=\"iconContainer4\">\r\n                    <img src={icon4} className=\"icon4\" aria-hidden=\"true\" />\r\n                    <p className=\"iconText\">Ignore me</p>\r\n                </div>\r\n                <div className=\"iconContainer6\">\r\n                    <img src={icon6} className=\"icon6\" aria-hidden=\"true\" />\r\n                    <p className=\"iconText\">Just an icon</p>\r\n                </div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DesktopIcons;\r\n\r\n","import React, { Component, Fragment } from 'react';\r\n\r\n\r\nclass Sounds extends Component {\r\n    render() {\r\n        console.log(this.props.playAudio)\r\n        return (\r\n            <Fragment>\r\n                {this.props.playAudio ? (\r\n                    \r\n                    <iframe title=\"modem\"\r\n                    width=\"0\" \r\n                    height=\"0\" \r\n                    src=\"https://www.youtube.com/embed/gsNaR6FRuO0?rel=0&amp;controls=0&amp;showinfo=0&autoplay=1\" frameborder=\"0\" \r\n                    allowfullscreen>\r\n                    </iframe>\r\n                ) : (\r\n                    console.log(\"nothing\")\r\n                )}\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Sounds","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport './App.css';\r\nimport UserInput from './UserInput.js';\r\nimport Clock from './Clock.js';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faWindowMinimize } from '@fortawesome/free-solid-svg-icons';\r\nimport { faWindowClose } from '@fortawesome/free-solid-svg-icons';\r\nimport UserOutput from './UserOutput.js';\r\nimport Error from './Error.js';\r\nimport Wiki from './Wiki.js';\r\nimport StartButton from './StartButton.js';\r\nimport StartMenu from './StartMenu.js';\r\nimport DesktopIcons from './DesktopIcons.js';\r\nimport Sounds from './Sounds.js'\r\n\r\n\r\nconst minimizeIcon = <FontAwesomeIcon aria-hidden=\"true\" icon={faWindowMinimize} />\r\nconst closeWindowIcon = <FontAwesomeIcon aria-hidden=\"true\" icon={faWindowClose} />\r\n\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      isLoading: true,\r\n      globalError: false,\r\n      returnError: false,\r\n      wholeWordResult: [],\r\n      wholeWord: [],\r\n      filteredArray: [],\r\n      visible: false,\r\n      selectedItem: \"\",\r\n      clicked: false,\r\n      playAudio:false\r\n    }\r\n  }\r\n\r\n  closePopup = () => {\r\n    this.setState({\r\n      returnError: false,\r\n    })\r\n  }\r\n\r\n  handleClick = (e) => {\r\n    this.setState({\r\n      selectedItem: e.target.innerText,\r\n      clicked: true\r\n    })\r\n  }\r\n\r\n  closeWiki = () => {\r\n    this.setState({\r\n      clicked: false,\r\n    })\r\n  }\r\n\r\n  // event handler\r\n  handleTextChange = (e) => {\r\n    const userInput = e.target.value;\r\n    const regexMaster = RegExp(`([\\sA-Za-z0-9])`);\r\n    const wordSpread = [...userInput];\r\n    let error = false;\r\n\r\n\r\n    wordSpread.map((letter) => {\r\n      // took out the === true because it's confusing and redundant\r\n      if (!regexMaster.test(letter)) {\r\n        error = true\r\n      }\r\n      return (\r\n        error\r\n      )\r\n    })\r\n    if (wordSpread.length > 0 && error === false) {\r\n      this.axiosCall(userInput)\r\n      this.setState({\r\n        globalError: false,\r\n      })\r\n    }\r\n    else {\r\n      this.setState({\r\n        globalError: true,\r\n      })\r\n    }\r\n  }\r\n\r\n  handleMouseDown(e) {\r\n    this.toggleMenu();\r\n    e.stopPropagation();\r\n  }\r\n\r\n  toggleMenu() {\r\n    this.setState({\r\n      visible: !this.state.visible\r\n    });\r\n  }\r\n\r\n  playSound=()=> {\r\n    console.log('clocked')\r\n    this.setState({\r\n      playAudio:true\r\n    },()=>{\r\n      // console.log(this.state.playAudio)\r\n    })\r\n  }\r\n\r\n\r\n\r\n\r\n  axiosCall = function (wholeWord) {\r\n    // let temporaryList = [];\r\n    const modifiedList = [];\r\n    let returnError = false;\r\n    axios({\r\n      //The API has no other way of sending exact data. I need to call the whole database.\r\n      url: `https://api.datamuse.com/sug?max=10&k=VQE6va&s=${wholeWord}`,\r\n      method: 'GET',\r\n\r\n    }).then((response) => {\r\n      // temporaryList = response;\r\n      response.data.map((word) => {\r\n        return (\r\n          modifiedList.push(word.word)\r\n        )\r\n      })\r\n\r\n      this.setState({\r\n        wholeWordResult: modifiedList,\r\n      }, () => {\r\n          if (this.state.wholeWordResult.length === 0) {\r\n            returnError = true\r\n          } else {\r\n            returnError = false\r\n          }\r\n      })\r\n      this.setState({\r\n        returnError: returnError\r\n      })\r\n    })\r\n      // .catch(function (error) {\r\n      // })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='App'>\r\n        <div className=\"desktopIcons\">\r\n\r\n        \r\n        </div>\r\n        <div className=\"container\">\r\n          <DesktopIcons />\r\n          <div className=\"wrapper\">\r\n            <div className=\"tabBar\">\r\n              <div className=\"iconContainer\">\r\n                <p class=\"icon\">{minimizeIcon}</p>\r\n                <button onClick={this.playSound} className=\"easterEgg\" ><p class=\"icon\">{closeWindowIcon}</p></button>\r\n              </div>\r\n            </div>\r\n            <div className=\"searchEngine\">\r\n              <h1>Autocomplete</h1>\r\n              <div className=\"inputsContainer\">\r\n                <div className=\"userInput\">\r\n                  <UserInput\r\n                    id=\"userInput\"\r\n                    onChange={this.handleTextChange}\r\n                    data={this.state.data} />\r\n                </div>\r\n                <div className=\"userOutput\">\r\n                  <UserOutput\r\n                    wholeWordResult={this.state.wholeWordResult}\r\n                    globalError={this.state.globalError} \r\n                    handleClick={this.handleClick.bind(this)}/>\r\n                </div>\r\n                <Error\r\n                  returnError={this.state.returnError}\r\n                  closePopup={this.closePopup} />\r\n                <Wiki\r\n                  clicked={this.state.clicked}\r\n                  selectedItem={this.state.selectedItem}\r\n                  closeWiki={this.closeWiki}/>\r\n                  <Sounds \r\n                  playSound={this.state.playSound}\r\n                  playAudio={this.state.playAudio}\r\n                   />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          </div>\r\n          <footer>\r\n          <StartButton handleMouseDown={this.handleMouseDown.bind(this)}/>\r\n            <StartMenu menuVisibility={this.state.visible} />\r\n            <Clock className=\"clock\" />\r\n          </footer>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}