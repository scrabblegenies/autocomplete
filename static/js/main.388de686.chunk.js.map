{"version":3,"sources":["windows.png","UserInput.js","Clock.js","UserOutput.js","Error.js","StartButton.js","StartMenu.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","UserInput","react_default","a","createElement","type","onChange","this","props","value","firstLetter","maxLength","placeholder","Component","Clock","state","time","Date","_this2","timerID","setInterval","tick","clearInterval","setState","className","toLocaleTimeString","UserOutput","_this","react","globalError","wholeWordResult","map","item","index","key","tabindex","onClick","handleClick","Error","returnError","class","id","closePopup","StartButton","onMouseDown","handleMouseDown","src","windows","alt","StartMenu","visibility","menuVisibility","href","questionMarkIcon","index_es","aria-hidden","icon","faQuestionCircle","minimizeIcon","faWindowMinimize","closeWindowIcon","faWindowClose","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","e","selectedItem","target","innerText","console","log","handleTextChange","event","userInput","regexMaster","RegExp","wordSpread","toConsumableArray","error","letter","test","length","axiosCall","wholeWord","modifiedList","blankError","axios","url","concat","method","then","response","data","word","i","push","catch","isLoading","filteredArray","visible","bind","assertThisInitialized","toggleMenu","stopPropagation","src_UserInput","src_UserOutput","src_Error","src_StartButton","src_StartMenu","src_Clock","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.388de686.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/windows.23d5e9bf.png\";","import React, { Component } from 'react';\r\n\r\nclass UserInput extends Component {\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <form>\r\n                    <input \r\n                    type=\"text\"\r\n                    onChange={this.props.onChange}\r\n                    value = {this.props.firstLetter}\r\n\r\n                    maxLength = \"20\"\r\n\r\n                    placeholder=\"start typing something\"\r\n\r\n                    />\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserInput;","import React, { Component } from 'react';\r\n\r\n\r\nclass Clock extends Component {\r\n     state = {\r\n         time: new Date()\r\n     };\r\n\r\n     componentDidMount() {\r\n         this.timerID = setInterval(() => this.tick(), 1000);\r\n     }\r\n\r\n     componentWillUnmount() {\r\n         clearInterval(this.timerID);\r\n     }\r\n\r\n     tick() {\r\n         this.setState({\r\n             time: new Date()\r\n         });\r\n     }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"clock\">\r\n         <p>{this.state.time.toLocaleTimeString()}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Clock;","import React, { Component, Fragment } from 'react';\r\n\r\n\r\nclass UserOutput extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                {this.props.globalError ? (\r\n                \r\n                <p className=\"letterOrNumber\">Please enter a letter or number</p> \r\n                \r\n                ):(\r\n                    this.props.wholeWordResult.map((item, index) => {\r\n                        return (\r\n                            <li\r\n                                key={index}\r\n                                className=\"autocompleteItem\"\r\n                                tabindex=\"0\"\r\n                                onClick={this.props.handleClick}>{item}</li>\r\n                        )\r\n                    }))\r\n                /* {this.props.wholeWordResult.map((item, index)=>{\r\n                    return(\r\n                        <li\r\n                            key = {index}\r\n                            className=\"autocompleteItem\">{item}</li>\r\n                    ) \r\n                }) */\r\n            }\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserOutput;\r\n\r\n","import React, { Component, Fragment } from 'react';\r\n\r\nclass Error extends Component {\r\n\r\n    render(){\r\n\r\n        return (\r\n            <Fragment>\r\n        \r\n                {this.props.returnError ? \r\n                    (<div class=\"errorPopup\" id=\"error\">\r\n                        <div class=\"topBanner\">\r\n                            <p class=\"error\">ERROR</p>\r\n                            <button\r\n                                class=\"x\"\r\n                                onClick={this.props.closePopup}>X</button>\r\n                        </div>\r\n                        <p class=\"errorMessage\">The word you have entered has no results.</p>\r\n                    </div>) \r\n                : null}\r\n            </Fragment>\r\n\r\n        )\r\n    }\r\n    \r\n}\r\n\r\n\r\nexport default Error","import React, {Component} from 'react';\r\nimport windows from './windows.png'\r\n\r\nclass StartButton extends Component {\r\n    render(){\r\n        return(\r\n            <button className=\"startButton\" onMouseDown={this.props.handleMouseDown}>\r\n                <div className=\"logo\">\r\n                    <img className=\"windows\" src={windows} alt=\"retro windows logo\" />\r\n                </div>\r\n                <p className=\"start\">Start</p>\r\n            </button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StartButton","import React, { Component } from 'react';\r\n\r\nclass StartMenu extends Component {\r\n    render() {\r\n\r\n        let visibility = \"startMenu hide\";\r\n\r\n        if (this.props.menuVisibility) {\r\n            visibility = \"startMenu show\";\r\n        }\r\n\r\n        return (\r\n            <div className={visibility}>\r\n                <div className=\"sideBanner\"></div>\r\n                <ul>\r\n                    <li><a href=\"https://twitter.com/RobertJinChun\">Robert Chun</a></li>\r\n                    <li><a href=\"https://twitter.com/Lobst3rDev\">Geoff Grossman</a></li>\r\n                    <li><a href=\"https://twitter.com/LC_butWithCode\">Laura Chuang</a></li>\r\n                    <li><a href=\"https://twitter.com/beckyiscoding\">Becky Robinson</a></li>\r\n                    <li className=\"datamuse\"><a href=\"https://www.datamuse.com/api/\">Made using the Datamuse API.</a></li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StartMenu","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport './App.css';\r\nimport UserInput from './UserInput.js';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport Clock from './Clock.js';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faQuestionCircle} from '@fortawesome/free-solid-svg-icons';\r\nimport { faWindowMinimize } from '@fortawesome/free-solid-svg-icons';\r\nimport { faWindowClose } from '@fortawesome/free-solid-svg-icons';\r\nimport UserOutput from './UserOutput.js';\r\nimport Error from './Error.js';\r\nimport StartButton from './StartButton.js';\r\nimport StartMenu from './StartMenu.js';\r\n\r\n\r\n\r\nconst questionMarkIcon = <FontAwesomeIcon aria-hidden=\"true\" icon={faQuestionCircle} />\r\nconst minimizeIcon = <FontAwesomeIcon aria-hidden=\"true\" icon={faWindowMinimize} />\r\nconst closeWindowIcon = <FontAwesomeIcon aria-hidden=\"true\" icon={faWindowClose} />\r\n\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      isLoading: true,\r\n      globalError: false,\r\n      returnError: false,\r\n      wholeWordResult: [],\r\n      wholeWord: [],\r\n      filteredArray: [],\r\n      visible: false,\r\n    }\r\n\r\n\r\n    this.handleMouseDown = this.handleMouseDown.bind(this);\r\n    this.toggleMenu = this.toggleMenu.bind(this);\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  closePopup = () => {\r\n    this.setState({\r\n      returnError: false,\r\n    })\r\n  }\r\n\r\n  handleClick = (e) => {\r\n    this.setState({\r\n      selectedItem: e.target.innerText\r\n    }, () => {\r\n      console.log(this.state.selectedItem)\r\n    })\r\n  }\r\n\r\n  // event handler\r\n  handleTextChange = (event) => {\r\n    let userInput = event.target.value;\r\n    let regexMaster = RegExp(`([\\sA-Za-z0-9])`);\r\n    let wordSpread = [...userInput];\r\n    let error = false;\r\n\r\n\r\n    wordSpread.map((letter) => {\r\n      if (!regexMaster.test(letter) === true) {\r\n        error = true\r\n      }\r\n      return (\r\n        error\r\n      )\r\n    })\r\n    if (wordSpread.length > 0 && error === false) {\r\n      this.axiosCall(userInput)\r\n      this.setState({\r\n        globalError: false,\r\n\r\n      }, () => {\r\n      })\r\n    }\r\n    else {\r\n      this.setState({\r\n        globalError: true,\r\n      }, () => {\r\n      })\r\n    }\r\n  }\r\n\r\n  handleMouseDown(e) {\r\n    console.log(\"clicked\", e.target);\r\n    this.toggleMenu();\r\n\r\n    \r\n    e.stopPropagation();\r\n  }\r\n\r\n  toggleMenu() {\r\n    this.setState(\r\n      {\r\n        visible: !this.state.visible\r\n      }\r\n    );\r\n    console.log(this.state.visible)\r\n  }\r\n\r\n\r\n  axiosCall = function (wholeWord) {\r\n    let temporaryList = [];\r\n    let modifiedList = [];\r\n    let blankError = false;\r\n    axios({\r\n      //The API has no other way of sending exact data. I need to call the whole database.\r\n      url: `http://api.datamuse.com/sug?max=10&k=VQE6va&s=${wholeWord}`,\r\n      method: 'GET',\r\n\r\n    }).then((response) => {\r\n      temporaryList = response;\r\n      temporaryList.data.map((word, i) => {\r\n        return (\r\n          modifiedList.push(word.word)\r\n        )\r\n      })\r\n\r\n      console.log(modifiedList)\r\n      // if (modifiedList.length < 1){\r\n      //   /////////////@@//////////////////////////////////////////////////////////////////////////////////////////\r\n      //   /////////////@@//////////////////////////////////////////////////////////////////////////////////////////\r\n      //   /////////////@@//////////////////////////////////////////////////////////////////////////////////////////\r\n      //   /////////////@@//////////////////////////////////////////////////////////////////////////////////////////\r\n      //   /////////////@@//////////////////////////////////////////////////////////////////////////////////////////\r\n      //   /////////////@@//////////////////////////////////////////////////////////////////////////////////////////\r\n      //   /////////////@@///////////////////@@@@@///////@/////@////@////////////@@@@///////////////////////////////\r\n      //   /////////////@@/////////////////@@/////@@/////@/////@////@@@@@@@////@@////@@/////////////////////////////\r\n      //   /////////////@@////////////////@/////////@////@/////@////@/////////@////////@////////////////////////////\r\n      //   /////////////@@/////////////////@@/////@@@////@/////@////@//////////@@////@@@////////////////////////////\r\n      //   /////////////@@@@@@@@@@@@@@///////@@@@@//@////@@@@@@@////@////////////@@@@//@////////////////////////////\r\n      //   alert(\"this is not right\")\r\n      // }\r\n\r\n      \r\n\r\n      this.setState({\r\n        wholeWordResult: modifiedList,\r\n        // returnError: blankError\r\n      }, () => {\r\n          console.log(this.state.wholeWordResult.length)\r\n          if (this.state.wholeWordResult.length === 0) {\r\n            blankError = true\r\n          } else {\r\n            blankError = false\r\n          }\r\n      })\r\n      this.setState({\r\n        returnError: blankError\r\n      }, () => {\r\n      })\r\n    })\r\n      .catch(function (error) {\r\n      })\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='App'>\r\n        {/* <UserInput onChange={this.handleTextChange} data={this.state.data} /> */}\r\n        <div className=\"container\">\r\n          <div className=\"wrapper\">\r\n            <div className=\"tabBar\">\r\n              <div className=\"iconContainer\">\r\n                <p class=\"icon\">{questionMarkIcon}</p>\r\n                <p class=\"icon\">{minimizeIcon}</p>\r\n                <p class=\"icon\">{closeWindowIcon}</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"searchEngine\">\r\n              <h1>Autocomplete</h1>\r\n              <div className=\"inputsContainer\">\r\n                <div className=\"userInput\">\r\n                  <UserInput\r\n                    id=\"userInput\"\r\n                    onChange={this.handleTextChange}\r\n                    data={this.state.data} />\r\n                </div>\r\n                <div className=\"userOutput\">\r\n                  <UserOutput\r\n                    wholeWordResult={this.state.wholeWordResult}\r\n                    globalError={this.state.globalError} \r\n                    handleClick={this.handleClick}/>\r\n                </div>\r\n                <Error\r\n                  returnError={this.state.returnError}\r\n                  closePopup={this.closePopup} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          </div>\r\n          <footer>\r\n            <StartButton handleMouseDown={this.handleMouseDown}/>\r\n            <StartMenu menuVisibility={this.state.visible} />\r\n            <Clock className=\"clock\" />\r\n          </footer>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}